<?xml version="1.0"?>
<robot>
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>10</updateRate>
      <leftJoint>left_front_wheel_joint</leftJoint>
      <rightJoint>right_front_wheel_joint</rightJoint>
      <wheelSeparation>0.295</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <torque>10</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>
  
  <gazebo>
    <plugin name="differential_drive2_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>10</updateRate>
      <leftJoint>left_back_wheel_joint</leftJoint>
      <rightJoint>right_back_wheel_joint</rightJoint>
      <wheelSeparation>0.295</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <torque>10</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  </gazebo>


  <gazebo reference="base_link">
    <material>Gazebo/White</material>
  </gazebo>

  <gazebo reference="left_back_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="right_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="left_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="right_back_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  
  
  <!-- Kinect v1 -->
  <gazebo reference="kinect_frame">
    <material>Gazebo/Black</material>
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${radians(60.0)}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>camera</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>kinect_gazebo_frame</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
  </gazebo>
  

  <!-- RPLIDAR -->
  <gazebo reference="rplidar_frame">
    <!--sensor type="gpu_ray" name="lidar_sensor"-->
    <sensor type="ray" name="lidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>5.5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>300</samples>
            <resolution>1</resolution>
            <min_angle>${-pi}</min_angle>
            <max_angle>${pi}</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.15</min>
          <max>6.0</max>
          <resolution>0.06</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <!--plugin name="lidar_sensor_controller" filename="libgazebo_ros_gpu_laser.so"-->
      <plugin name="lidar_sensor_controller" filename="libgazebo_ros_laser.so">
        <topicName>/rplidar_scan</topicName>
        <frameName>rplidar_frame</frameName>
      </plugin>
    </sensor>
  </gazebo>
  
</robot>

